name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}


      # Get date and short SHA for filename
    - name: Set filename variables
      id: filename
      run: |
        $date = Get-Date -Format "yyyyMMdd"
        $sha = git rev-parse --short HEAD
        echo "RELEASE_FILE=nssm_launcher_${date}_${sha}.exe" >> $env:GITHUB_OUTPUT

    # Copy and rename the executable
    - name: Prepare Release File
      run: |
        Copy-Item .\x64\Release\YourApp.exe "${{ steps.filename.outputs.RELEASE_FILE }}"

    # Create the release
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.filename.outputs.RELEASE_FILE }}
        name: Release ${{ github.ref_name }}
        draft: true        
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
